{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "8739b107",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-11-26T15:19:32.361689Z",
     "iopub.status.busy": "2024-11-26T15:19:32.361239Z",
     "iopub.status.idle": "2024-11-26T15:19:33.514150Z",
     "shell.execute_reply": "2024-11-26T15:19:33.512593Z"
    },
    "papermill": {
     "duration": 1.161613,
     "end_time": "2024-11-26T15:19:33.516969",
     "exception": false,
     "start_time": "2024-11-26T15:19:32.355356",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/depression-surveydataset-for-analysis/final_depression_dataset_1.csv\n",
      "/kaggle/input/playground-series-s4e11/sample_submission.csv\n",
      "/kaggle/input/playground-series-s4e11/train.csv\n",
      "/kaggle/input/playground-series-s4e11/test.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e80deff2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-26T15:19:33.526088Z",
     "iopub.status.busy": "2024-11-26T15:19:33.525541Z",
     "iopub.status.idle": "2024-11-26T15:19:36.708761Z",
     "shell.execute_reply": "2024-11-26T15:19:36.707564Z"
    },
    "papermill": {
     "duration": 3.191035,
     "end_time": "2024-11-26T15:19:36.711959",
     "exception": false,
     "start_time": "2024-11-26T15:19:33.520924",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import warnings\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import optuna\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "from catboost import CatBoostClassifier, Pool\n",
    "from sklearn import metrics\n",
    "from sklearn.metrics import (\n",
    "    accuracy_score,\n",
    "    classification_report,\n",
    "    confusion_matrix,\n",
    "    roc_auc_score,\n",
    "    roc_curve\n",
    ")\n",
    "from sklearn.model_selection import (\n",
    "    KFold,\n",
    "    RandomizedSearchCV,\n",
    "    StratifiedKFold,\n",
    "    cross_val_score,\n",
    "    train_test_split,\n",
    ")\n",
    "from sklearn.metrics import roc_auc_score\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "\n",
    "warnings.filterwarnings(\"ignore\", category=FutureWarning)\n",
    "plt.style.use(\"fast\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c5ec3053",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-26T15:19:36.727818Z",
     "iopub.status.busy": "2024-11-26T15:19:36.726516Z",
     "iopub.status.idle": "2024-11-26T15:19:37.904508Z",
     "shell.execute_reply": "2024-11-26T15:19:37.902780Z"
    },
    "papermill": {
     "duration": 1.189455,
     "end_time": "2024-11-26T15:19:37.908047",
     "exception": false,
     "start_time": "2024-11-26T15:19:36.718592",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 143256 entries, 0 to 143255\n",
      "Data columns (total 19 columns):\n",
      " #   Column                                 Non-Null Count   Dtype  \n",
      "---  ------                                 --------------   -----  \n",
      " 0   Name                                   143256 non-null  object \n",
      " 1   Gender                                 143256 non-null  object \n",
      " 2   Age                                    143256 non-null  float64\n",
      " 3   City                                   143256 non-null  object \n",
      " 4   Working Professional or Student        143256 non-null  object \n",
      " 5   Profession                             105953 non-null  object \n",
      " 6   Academic Pressure                      28399 non-null   float64\n",
      " 7   Work Pressure                          114836 non-null  float64\n",
      " 8   CGPA                                   28400 non-null   float64\n",
      " 9   Study Satisfaction                     28399 non-null   float64\n",
      " 10  Job Satisfaction                       114844 non-null  float64\n",
      " 11  Sleep Duration                         143256 non-null  object \n",
      " 12  Dietary Habits                         143252 non-null  object \n",
      " 13  Degree                                 143254 non-null  object \n",
      " 14  Have you ever had suicidal thoughts ?  143256 non-null  object \n",
      " 15  Work/Study Hours                       143256 non-null  float64\n",
      " 16  Financial Stress                       143252 non-null  float64\n",
      " 17  Family History of Mental Illness       143256 non-null  object \n",
      " 18  Depression                             143256 non-null  int64  \n",
      "dtypes: float64(8), int64(1), object(10)\n",
      "memory usage: 20.8+ MB\n"
     ]
    }
   ],
   "source": [
    "train_df = pd.read_csv(\"/kaggle/input/playground-series-s4e11/train.csv\")\n",
    "test_df = pd.read_csv(\"/kaggle/input/playground-series-s4e11/test.csv\")\n",
    "original_df = pd.read_csv(\"/kaggle/input/depression-surveydataset-for-analysis/final_depression_dataset_1.csv\")\n",
    "original_df[\"Depression\"] = original_df[\"Depression\"].map({\"Yes\": 1, \"No\": 0})\n",
    "full_train = pd.concat([train_df, original_df], ignore_index=True)\n",
    "full_train = full_train.drop([\"id\"], axis=1)\n",
    "test_df = test_df.drop([\"id\"], axis=1)\n",
    "full_train.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "b2a16d15",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-26T15:19:37.917944Z",
     "iopub.status.busy": "2024-11-26T15:19:37.917363Z",
     "iopub.status.idle": "2024-11-26T15:19:38.046977Z",
     "shell.execute_reply": "2024-11-26T15:19:38.045792Z"
    },
    "papermill": {
     "duration": 0.137141,
     "end_time": "2024-11-26T15:19:38.049538",
     "exception": false,
     "start_time": "2024-11-26T15:19:37.912397",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Academic Pressure</th>\n",
       "      <th>Work Pressure</th>\n",
       "      <th>CGPA</th>\n",
       "      <th>Study Satisfaction</th>\n",
       "      <th>Job Satisfaction</th>\n",
       "      <th>Work/Study Hours</th>\n",
       "      <th>Financial Stress</th>\n",
       "      <th>Depression</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>143256.00</td>\n",
       "      <td>28399.00</td>\n",
       "      <td>114836.00</td>\n",
       "      <td>28400.00</td>\n",
       "      <td>28399.00</td>\n",
       "      <td>114844.00</td>\n",
       "      <td>143256.00</td>\n",
       "      <td>143252.00</td>\n",
       "      <td>143256.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>40.36</td>\n",
       "      <td>3.14</td>\n",
       "      <td>3.00</td>\n",
       "      <td>7.66</td>\n",
       "      <td>2.95</td>\n",
       "      <td>2.98</td>\n",
       "      <td>6.25</td>\n",
       "      <td>2.99</td>\n",
       "      <td>0.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>12.38</td>\n",
       "      <td>1.38</td>\n",
       "      <td>1.41</td>\n",
       "      <td>1.46</td>\n",
       "      <td>1.36</td>\n",
       "      <td>1.42</td>\n",
       "      <td>3.85</td>\n",
       "      <td>1.41</td>\n",
       "      <td>0.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>18.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>5.03</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>29.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>6.29</td>\n",
       "      <td>2.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>3.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>42.00</td>\n",
       "      <td>3.00</td>\n",
       "      <td>3.00</td>\n",
       "      <td>7.77</td>\n",
       "      <td>3.00</td>\n",
       "      <td>3.00</td>\n",
       "      <td>6.00</td>\n",
       "      <td>3.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>51.00</td>\n",
       "      <td>4.00</td>\n",
       "      <td>4.00</td>\n",
       "      <td>8.92</td>\n",
       "      <td>4.00</td>\n",
       "      <td>4.00</td>\n",
       "      <td>10.00</td>\n",
       "      <td>4.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>60.00</td>\n",
       "      <td>5.00</td>\n",
       "      <td>5.00</td>\n",
       "      <td>10.00</td>\n",
       "      <td>5.00</td>\n",
       "      <td>5.00</td>\n",
       "      <td>12.00</td>\n",
       "      <td>5.00</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Age  Academic Pressure  Work Pressure      CGPA  \\\n",
       "count  143256.00           28399.00      114836.00  28400.00   \n",
       "mean       40.36               3.14           3.00      7.66   \n",
       "std        12.38               1.38           1.41      1.46   \n",
       "min        18.00               1.00           1.00      5.03   \n",
       "25%        29.00               2.00           2.00      6.29   \n",
       "50%        42.00               3.00           3.00      7.77   \n",
       "75%        51.00               4.00           4.00      8.92   \n",
       "max        60.00               5.00           5.00     10.00   \n",
       "\n",
       "       Study Satisfaction  Job Satisfaction  Work/Study Hours  \\\n",
       "count            28399.00         114844.00         143256.00   \n",
       "mean                 2.95              2.98              6.25   \n",
       "std                  1.36              1.42              3.85   \n",
       "min                  1.00              1.00              0.00   \n",
       "25%                  2.00              2.00              3.00   \n",
       "50%                  3.00              3.00              6.00   \n",
       "75%                  4.00              4.00             10.00   \n",
       "max                  5.00              5.00             12.00   \n",
       "\n",
       "       Financial Stress  Depression  \n",
       "count         143252.00   143256.00  \n",
       "mean               2.99        0.18  \n",
       "std                1.41        0.39  \n",
       "min                1.00        0.00  \n",
       "25%                2.00        0.00  \n",
       "50%                3.00        0.00  \n",
       "75%                4.00        0.00  \n",
       "max                5.00        1.00  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "full_train.describe().round(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "794fd618",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-26T15:19:38.059469Z",
     "iopub.status.busy": "2024-11-26T15:19:38.059062Z",
     "iopub.status.idle": "2024-11-26T15:19:38.304084Z",
     "shell.execute_reply": "2024-11-26T15:19:38.302911Z"
    },
    "papermill": {
     "duration": 0.252743,
     "end_time": "2024-11-26T15:19:38.306595",
     "exception": false,
     "start_time": "2024-11-26T15:19:38.053852",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Gender</th>\n",
       "      <th>City</th>\n",
       "      <th>Working Professional or Student</th>\n",
       "      <th>Profession</th>\n",
       "      <th>Sleep Duration</th>\n",
       "      <th>Dietary Habits</th>\n",
       "      <th>Degree</th>\n",
       "      <th>Have you ever had suicidal thoughts ?</th>\n",
       "      <th>Family History of Mental Illness</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>143256</td>\n",
       "      <td>143256</td>\n",
       "      <td>143256</td>\n",
       "      <td>143256</td>\n",
       "      <td>105953</td>\n",
       "      <td>143256</td>\n",
       "      <td>143252</td>\n",
       "      <td>143254</td>\n",
       "      <td>143256</td>\n",
       "      <td>143256</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>422</td>\n",
       "      <td>2</td>\n",
       "      <td>98</td>\n",
       "      <td>2</td>\n",
       "      <td>64</td>\n",
       "      <td>36</td>\n",
       "      <td>23</td>\n",
       "      <td>115</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>Rohan</td>\n",
       "      <td>Male</td>\n",
       "      <td>Kalyan</td>\n",
       "      <td>Working Professional</td>\n",
       "      <td>Teacher</td>\n",
       "      <td>Less than 5 hours</td>\n",
       "      <td>Moderate</td>\n",
       "      <td>Class 12</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>3204</td>\n",
       "      <td>78797</td>\n",
       "      <td>6683</td>\n",
       "      <td>114853</td>\n",
       "      <td>25228</td>\n",
       "      <td>39432</td>\n",
       "      <td>50537</td>\n",
       "      <td>15004</td>\n",
       "      <td>72445</td>\n",
       "      <td>72069</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Name  Gender    City Working Professional or Student Profession  \\\n",
       "count   143256  143256  143256                          143256     105953   \n",
       "unique     422       2      98                               2         64   \n",
       "top      Rohan    Male  Kalyan            Working Professional    Teacher   \n",
       "freq      3204   78797    6683                          114853      25228   \n",
       "\n",
       "           Sleep Duration Dietary Habits    Degree  \\\n",
       "count              143256         143252    143254   \n",
       "unique                 36             23       115   \n",
       "top     Less than 5 hours       Moderate  Class 12   \n",
       "freq                39432          50537     15004   \n",
       "\n",
       "       Have you ever had suicidal thoughts ? Family History of Mental Illness  \n",
       "count                                 143256                           143256  \n",
       "unique                                     2                                2  \n",
       "top                                       No                               No  \n",
       "freq                                   72445                            72069  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "full_train.describe(include=\"object\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "8ba91135",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-26T15:19:38.316446Z",
     "iopub.status.busy": "2024-11-26T15:19:38.316052Z",
     "iopub.status.idle": "2024-11-26T15:19:38.439147Z",
     "shell.execute_reply": "2024-11-26T15:19:38.438027Z"
    },
    "papermill": {
     "duration": 0.130929,
     "end_time": "2024-11-26T15:19:38.441660",
     "exception": false,
     "start_time": "2024-11-26T15:19:38.310731",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Name                                     422\n",
       "Gender                                     2\n",
       "Age                                       43\n",
       "City                                      98\n",
       "Working Professional or Student            2\n",
       "Profession                                64\n",
       "Academic Pressure                          5\n",
       "Work Pressure                              5\n",
       "CGPA                                     331\n",
       "Study Satisfaction                         5\n",
       "Job Satisfaction                           5\n",
       "Sleep Duration                            36\n",
       "Dietary Habits                            23\n",
       "Degree                                   115\n",
       "Have you ever had suicidal thoughts ?      2\n",
       "Work/Study Hours                          13\n",
       "Financial Stress                           5\n",
       "Family History of Mental Illness           2\n",
       "Depression                                 2\n",
       "dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "full_train.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c1c0e9e9",
   "metadata": {
    "papermill": {
     "duration": 0.004036,
     "end_time": "2024-11-26T15:19:38.450039",
     "exception": false,
     "start_time": "2024-11-26T15:19:38.446003",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e89c457c",
   "metadata": {
    "papermill": {
     "duration": 0.003754,
     "end_time": "2024-11-26T15:19:38.457877",
     "exception": false,
     "start_time": "2024-11-26T15:19:38.454123",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5b1bd0bb",
   "metadata": {
    "papermill": {
     "duration": 0.006163,
     "end_time": "2024-11-26T15:19:38.468118",
     "exception": false,
     "start_time": "2024-11-26T15:19:38.461955",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "43700599",
   "metadata": {
    "papermill": {
     "duration": 0.004203,
     "end_time": "2024-11-26T15:19:38.478341",
     "exception": false,
     "start_time": "2024-11-26T15:19:38.474138",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e758943f",
   "metadata": {
    "papermill": {
     "duration": 0.005572,
     "end_time": "2024-11-26T15:19:38.488421",
     "exception": false,
     "start_time": "2024-11-26T15:19:38.482849",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3bedd628",
   "metadata": {
    "papermill": {
     "duration": 0.005178,
     "end_time": "2024-11-26T15:19:38.500355",
     "exception": false,
     "start_time": "2024-11-26T15:19:38.495177",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6e0f2af3",
   "metadata": {
    "papermill": {
     "duration": 0.006642,
     "end_time": "2024-11-26T15:19:38.515753",
     "exception": false,
     "start_time": "2024-11-26T15:19:38.509111",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "35253478",
   "metadata": {
    "papermill": {
     "duration": 0.007486,
     "end_time": "2024-11-26T15:19:38.528610",
     "exception": false,
     "start_time": "2024-11-26T15:19:38.521124",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "87ed4178",
   "metadata": {
    "papermill": {
     "duration": 0.004468,
     "end_time": "2024-11-26T15:19:38.538423",
     "exception": false,
     "start_time": "2024-11-26T15:19:38.533955",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 10008389,
     "sourceId": 84895,
     "sourceType": "competition"
    },
    {
     "datasetId": 5868381,
     "sourceId": 9616093,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30786,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 10.036296,
   "end_time": "2024-11-26T15:19:39.368830",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-11-26T15:19:29.332534",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
